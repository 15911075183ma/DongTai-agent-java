# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: DongTai Agent Java CodeCheck、Unit Test And Vulns Test

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
#  schedule:
#    - cron: '0 10 * * *'

jobs:
  dependencies:
    name: Cache dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.2.5
      - uses: actions/cache@v2
        id: mvn-cache # use this to check for `cache-hit` (`steps.mvn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ~/.m2 # !WARN does not work if running multiple node versions, instead use https://github.com/actions/cache/blob/master/examples.md#node---yarn
          key: ${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-mvn-
      - name: Mvn Install
        if: steps.mvn-cache.outputs.cache-hit != 'true'
        run: mvn compile -Dmaven.test.skip=true

  build:
    name: Build Java Agent
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
            
      - uses: dbelyaev/action-checkstyle@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          level: error

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.2.5
      
      - name: Restore dependencies from cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-mvn-

      - name: Build DongTai-Java-Agent With Maven
        run: |
          mvn -version
          mvn -B package -Dmaven.test.skip=true
      
      - uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8.0'
          auto-start: true
          root-password: yuhjnbGYUI
          user: test
          password: test
      
      - name: OpenRASP-Vulns-Test
        run: |
          cd ..

          echo "download apache-tomcat-8.5.0..."
          wget https://github.com/exexute/github_action_samples/releases/download/1.0.0/apache-tomcat-8.5.40.zip 1>/dev/null
          unzip apache-tomcat-8.5.40.zip

          echo "copy dongtai agent java to tomcat..."
          cp DongTai-agent-java/release/iast-agent.jar apache-tomcat-8.5.40/iast/agent.jar
          cp DongTai-agent-java/release/lib/iast-core.jar apache-tomcat-8.5.40/temp/iast-core.jar
          cp DongTai-agent-java/release/lib/iast-inject.jar apache-tomcat-8.5.40/temp/iast-inject.jar
          cd apache-tomcat-8.5.40

          echo "init mysql"
          cat init.sql
          mysql -uroot -pyuhjnbGYUI -h127.0.0.1 < init.sql
          mysql -uroot -pyuhjnbGYUI -h127.0.0.1 -e 'show DATABASES;'

          echo "start catalina and waitting 30s..."
          ./bin/startup.sh 2>/dev/null
          sleep 30

          echo "start vulns spider..."
          ./spider.sh

          echo "waitting for send vuls data"
          sleep 600
      
      - name: Benchmark-Vulns-Test
        run: |
          pwd
          ls -l
          java -version
          mvn -version
          # download Benchmark
          # Copy Agent To Benchmark
          # Run
